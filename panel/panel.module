<?php

function panel_menu() {
  $menu['panel'] = array(
    'title' => 'GWPanel 2.0',
    'access arguments' => array('panel view'), 
    'page callback' => 'panel_panel', 
  );
  $menu['panel/settings'] = array(
    'title' => 'Мои настройки',
    'access arguments' => array('panel view'), 
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('panel_settings_form'), 
  );
  $menu['panel/updatelist'] = array(
    'type' => MENU_CALLBACK,
    'access arguments' => array('panel view'), 
    'page callback' => 'panel_updatelist',
  );
  return $menu;
}

function panel_permission() {
  return array('panel view', 'use cheats',);
}

function panel_load($id) {
  
}

function panel_panel() {
  $output = '<style type="text/css">
.panel-box {
  width: 170px;
  display: inline-block;
  margin: 5px;
  vertical-align: top;
}

.panel-box.disabled, .panel-box.succeed {
  opacity: 0.5;
}

.panel-icon {
  width: 100px;
  height: 100px;
  border: 1px solid #000;
  margin: 0 auto;
}

.panel-icon a {
  display: block;
  width: 100px;
  height: 100px;
}

.disabled .panel-icon a, .succeed .panel-icon a {
  display: none;
}

.panel-box.succeed .panel-icon {
  background: url(/misc/watchdog-ok.png) no-repeat center center;
}

.panel-box .container {
  text-align: center;
}

.info-div {
  display: none;
  font-size: 16px;
}

</style>';
  global $user;
  $client_class = $settings_class = $install_class = ' disabled';
  
  if(isset($_GET['nocache'])) panel_updateclient();
  
  $version = variable_get('panel_version', 0);
  
  
  if(isset($user->roles[DRUPAL_AUTHENTICATED_RID])) {
    $authorize = 'Авторизован как ' . theme('username', array('account' => $user));
    $auth_class = ' succeed';
    
    $client_class = '';
    $output .= '<script type="text/javascript">
jQuery(window).load(function() {
  setTimeout(function() {
    if(window.__panel && window.panelVersion >= ' . $version . ') {
      $("#panel-install-client").addClass("succeed");
      $("#panel-install-client .container").html("Клиент установлен, версия: " + window.panelVersion);
      jQuery(".info-div").hide();
      
      if(window.panel_configured) {
        $("#panel-settings").removeClass("disabled").addClass("succeed");
         $("#panel-install").removeClass("disabled");
        jQuery("#panel-install-info").show();
      } else {
        $("#panel-settings").removeClass("disabled");
        jQuery("#panel-settings-info").show();
      }
    } else {
      if(window.panelVersion && window.panelVersion < ' . $version . ') {
        jQuery("#panel-install-client-info").html("<h2>К сожалению версия клиента устарела, пожалуйста установите скрипт заново:</h2>" + jQuery("#panel-install-client-info").html());
      }
    }
  }, 100);
});
</script>';
    global $user;
    $panel = db_select('gwjs_panels', 'p')
      ->fields('p')
      ->condition('uid', $user->uid)
      ->range(0, 1)
      ->execute()
      ->fetchAssoc();
    if($panel && $panel['id']) {
      // Панель создана, настройки есть
      $output .= '<script type="text/javascript">
window.panel_configured = true;
</script>';
    }
  } else {
    $authorize = '1. ' . l('Авторизоваться', 'csauth');
  }
  
  //print_r($_SERVER);
  $userscript_path = '/' . drupal_get_path('module', 'panel') . '/v/' . sprintf('%05d', variable_get('panel_version', 0)) . '/gwpanel2.user.js';
  
  $output .= '<div class="panel-box' . $auth_class . '" id="panel-authorize"><div class="panel-icon"><a href="/csauth"></a></div><div class="container">' . $authorize . '</div></div>';
  
  $output .= '<div class="panel-box' . $client_class . '" id="panel-install-client"><div class="panel-icon"><a class="install-client-link" href="' . $userscript_path . '"></a></div><div class="container">2. Установить клиент</div></div>';
  
  $output .= '<div class="panel-box' . $settings_class . '" id="panel-settings"><div class="panel-icon"><a href="/panel/settings"></a></div><div class="container">3. Настроить GWPanel</div></div>';
  
  $output .= '<div class="panel-box' . $install_class . '" id="panel-install"><div class="panel-icon"><a href="/panel/install"></a></div><div class="container">4. Установить GWPanel</div></div>';
  
  $output .= '<div id="panel-authorize-info" class="info-div">Для успешной авторизации вы должны быть авторизованы в игре Ganjawars.ru</div>';
  
  $output .= '<div id="panel-install-client-info" class="info-div">';

  if(strpos($_SERVER['HTTP_USER_AGENT'], 'MSIE') !== FALSE) {
    $output .= 'Извините, Браузер Internet Explorer временно не поддерживается (по крайней мере до выхода 8-й версии)<br /><br /><h3>Однако вы можете начать использовать GWPanel прямо сейчас установив один из поддерживаемых браузеров: <br /><br />
<a href="http://www.mozilla.com/firefox?from=sfx&uid=0&t=309"><img border="0" alt="Spreadfirefox Affiliate Button" src="http://sfx-images.mozilla.org/affiliates/Buttons/firefox3/468x60.png" /></a><br /><br /><br />
<a href="http://www.opera.com/download/"><img src="http://promote.opera.com/opera9/468x60opera9.gif" width="468" height="60" alt="Safe online banking and shopping - New fraud protection from Opera" title="Download & Install Opera 9.6 Now!" /></a>
';
//     return $result;
//     $result = '<b>Внимание!</b> Ознакомьтесь с <a href="' . url('node/9') . '">этой страницей прежде чем использовать панель</a>.<br /><br />Для того чтобы панель открывалась автоматически, вам нужно установить плагин Greasemonkey как сказано в <a href="' . url('panel/ie') . '">этой статье</a> и скачать <a href="' . url('panel/ie') . '">этот файл</a>';
//     $result .= '<h2>Ваш браузер - Internet Explorer</h2><br />';
  } else if(preg_match('/Mozilla.*Firefox\/([0-9\.]+)/', $_SERVER['HTTP_USER_AGENT'], $matches)) {
    $output .= '<ol>
<li>Установите плагин <a target="__blank" href="http://addons.mozilla.org/ru/firefox/addon/748">Greasemonkey</a> (читается как "Гризманки")</li>
<li>Перезапустите Firefox</li>
<li>Установите файл клиента: <a class="install-client-link" href="' . $userscript_path . '">gwpanel.user.js</a></li>
</ol>
';
  } else if(preg_match('/Opera\/([0-9\.]+)/', $_SERVER['HTTP_USER_AGENT'], $matches)) {
    $output .= '<ol>
<li>Настройте папку с пользовательскими скриптами как показано <a target="__blank" href="http://clubs.ya.ru/4611686018427409269/replies.xml?item_no=874&ncrnd=3302">на этом скриншоте</a></li>
<li>Удалите ВСЕ НАСТРОЙКИ которые вы выставляли при помощи кнопки "Настройки для сайта" (скрипты от W_or_M и прочее устанавливайте точно так же как показано по ссылке ниже, они будут работать)</li>
<li>Скачайте <a class="install-client-link" href="' . $userscript_path . '">скрипт клиента</a> в папку с пользовательскими скриптами.</li>
</ol>'; 
  } else if(preg_match('/Chrome\/([0-9\.]+)/', $_SERVER['HTTP_USER_AGENT'], $matches)) {
    $output .= 'Установите <a class="install-client-link" href="' . $userscript_path . '">скрипт клиента</a>';
  } else {
    $output .= 'Извините, ваш браузер не поддерживается. Используйте один из этих браузеров:<br /><br />
<a href="http://www.mozilla.com/firefox?from=sfx&uid=0&t=309"><img border="0" alt="Spreadfirefox Affiliate Button" src="http://sfx-images.mozilla.org/affiliates/Buttons/firefox3/468x60.png" /></a><br /><br /><br />
<a href="http://www.opera.com/download/"><img src="http://promote.opera.com/opera9/468x60opera9.gif" width="468" height="60" alt="Safe online banking and shopping - New fraud protection from Opera" title="Download & Install Opera 9.6 Now!" /></a> <br /><br />
';
  }
  
  $output .= '</div>';
  
  $output .= '<div id="panel-settings-info" class="info-div"><p>После успешной настройки все ваши данные будут храниться в вашем браузере и на нашем сервере.</p>
<p>При этом если вы зайдете в следующий раз из другого места, то все настройки сохранятся (за исключением статистики и других временных данных), и ничего не нужно будет настраивать заново.</p>
<h2><a href="/panel/settings">Перейти к настройке &gt;&gt;</a></h2>
</div>';
  
  $output .= '<div id="panel-install-info" class="info-div"><p>Последний шаг &mdash; установка самых свежих виджетов, скриптов и стилей.</p>
<p>Все они будут храниться в локальном хранилище браузера, это даёт самую высокую скорость работы.</p>
<p>Когда выйдет новая версия какого-либо модуля, вы получите уведомление. Пройдя на этот сайт, можно будет прочесть что именно было добавлено или удалено.</p>
<p>При этом загружать и устанавливать заново ничего не требуется &mdash; <strong>всё делается одним кликом</strong>!</p>
<h2><a href="/panel/install">Перейти к установке &gt;&gt;</a></h2>
</div>';

  $output .= '<script type="text/javascript">
// Тесты на поддержку технологий :)
if(!window.postMessage) {
  jQuery("#panel-install-client").addClass("disabled");
  jQuery("#panel-install-client-info").html("<p>К сожалению установка GWPanel невозможна, поскольку ваш браузер не поддерживает window.postMessage()</p>");
}
if(!window.localStorage) {
  jQuery("#panel-install-client").addClass("disabled");
  jQuery("#panel-install-client-info").html("<p>К сожалению установка GWPanel невозможна, поскольку ваш браузер не поддерживает localStorage.</p><p>Если эта функция поддерживается, но была отключена, то включите её и попробуйте снова</p>");
}
setTimeout(function() {
  jQuery("#" + jQuery(".panel-box:not(.disabled):not(.succeed)").attr("id") + "-info").show();
}, 500);

jQuery(".install-client-link").click(function() {
  //начинаем слежение за установкой
  var frame = jQuery("<iframe src=\'" + location.href.split("?")[0] + "?" + "\'></iframe").css({visibility: "hidden"}).load(function() {
    var that = this;
    setTimeout(function() {
      if(that.contentWindow.__panel && that.contentWindow.panelVersion >= ' . $version . ') {
        jQuery("#panel-install-client").addClass("succeed");
        jQuery("#panel-install-client .container").html("Клиент установлен, версия: " + that.contentWindow.panelVersion);
        jQuery("#panel-settings").removeClass("disabled");
        jQuery(".info-div").hide();
        jQuery("#panel-settings-info").show();
        clearInterval(panelInstInt);
      }
    }, 100);
  }).appendTo(document.body);
  
  var panelInstInt = setInterval(function() {
    frame.attr("src", location.href.split("?")[0] + "?" + (new Date).getTime());
  }, 5000);
  
  return true;
});
</script>';
  
  return $output;
}

function panel_settings_form($form, &$form_values) {
  $form['modules'] = array(
    '#type' => 'fieldset',
    '#title' => 'Модули',
  );
  $modules = module_invoke_all('panel_plugins');
  
  $options = array();
  
  
  foreach($modules as $module => $__module) {
    $form['modules'][$module] = array(
      '#type' => 'link',
      '#title' => isset($modules[$module]) && isset($modules[$module]['description'])? $modules[$module]['description']: 'модуль ' . $module,
      '#weight' => isset($modules[$module]['weight'])? $modules[$module]['weight']: 0,
      '#href' => '', 
    );
  }
  foreach(module_implements('plugin_settings') as $module) {
    $func = $module . '_plugin_settings';
    $result = $func($form, $form_values, isset($options[$module])? $options[$module]: array());
    foreach($result as $key => $val) $form[$key] = $val;
  }
//   foreach(module_implements('plugin_settings') as $module) {
//     if(@in_array($module, $options['plugins']) || $module == 'panel') {
//       $_form = module_invoke($module, 'plugin_settings', $options);
//       foreach($_form as $key => $value) {
//         if(isset($form[$key])) {
//           $form[$key] = array_merge($form[$key], $value);
//         } else {
//           $form[$key] = $value;
//         }
//       }
//     }
//   }
  //print_r($form);
  //uasort($form, '_element_sort');
  //return 'Настройка';
  return $form;
}

function panel_settings_form_submit() {
  
}

function panel_prepare_js($code) {
  $code = preg_replace('/([^:\\\\"])(\/\/[^\n]*?)$/m', '$1', $code);
  return str_replace(array("\t", "\n"), array(' ', ' '), addslashes($code));
}

function panel_updateclient() {
  $path = str_replace('/panel', '', drupal_get_path('module', 'panel'));
  
  $version = variable_get('panel_version', 0) + 1;
  variable_set('panel_version', $version);
  
  $output = '// ==UserScript==
// @name          GWPanel 2
// @namespace     http://gwpanel.org
// @description      Client-panel for Ganjawars online game
// @include       http://ganjawars.ru/*
// @version       client v' . $version . '
// @include       http://*.ganjawars.ru/*
// @include       http://' . $_SERVER['SERVER_NAME'] . '/*
// @exclude       http://chat.ganjawars.ru/*
// @exclude       http://photos.ganjawars.ru/*
// @exclude       http://*.ganjawars.ru/index.php
// @exclude       http://*.ganjawars.ru/
// @exclude       http://*.ganjawars.ru/login.php
// @exclude       http://*.ganjawars.ru/b0/btk.php
// ==/UserScript==
var url = \'http://' . $_SERVER['SERVER_NAME'] . '/\';
try {
  if(unsafeWindow)
    var window = unsafeWindow;
} catch(e) {
  if(window.opera && location.pathname == \'/login.php\') {
    if(document.domain == \'ganjawars.ru\') window.location = \'http://www.ganjawars.ru/login.php\';
    var myform = document.getElementById(\'myform\');
    if(myform && myform.onsubmit) {
      myform.oldonsubmit = myform.onsubmit;
      myform.onsubmit = function() {
        myform.action = myform.action.replace(/www\./, \'\');
      };
    };
  };
};

window.panelVersion = ' . $version . ';

window.__loadScript = function(path) {
  var content;
  switch(path) {
    case "lib/jquery.js":
      content = "' . panel_prepare_js(file_get_contents($path . '/lib/jquery.min.js')) . '";
    break;
    case "panel/panel.js":
      content = "' . panel_prepare_js(file_get_contents($path . '/panel/panel.js')) . '";
    break;
    case "lib/crosswindow.js":
      content = "' . panel_prepare_js(file_get_contents($path . '/lib/crosswindow.js')) . '";
    break;
    case "lib/crossclient.js":
      var content = "' . panel_prepare_js(file_get_contents($path . '/lib/crossclient.js')) . '";
    break;
    case "lib/serialize.js":
      var content = "' . panel_prepare_js(file_get_contents($path . '/lib/serialize.js')) . '";
    break;
    case "lib/json.js":
      var content = "' . panel_prepare_js(file_get_contents($path . '/lib/json.js')) . '";
    break;
    default:
      window.console.log("GWPanel: core script not found: " + path);
    break;
  }
  try{
    //console.log(content);
    //console.log(this);
    //console.log(window.jQuery);
    window.eval("with(window) {" + content + "}");
  } catch(e) {
    console.log("Error loading script: " + path, e);
    //console.log(content);
  }
}

var __initJquery = "if(window.$) window.old$ = window.$; window.__loadScript(\'lib/jquery.js\'); ";
var __initLibs = "window.__loadScript(\'lib/serialize.js\'); window.__loadScript(\'lib/json.js\'); ";
var __initCW = "window.__loadScript(\'lib/crosswindow.js\'); ";
var __initPanel = "window.__loadScript(\'panel/panel.js\'); ";
var __runPanel = "if(window.old$) window.$ = window.old$; window.__panel = new Panel2({}, {}, {}, \'" + url + "\'); ";
var __initClient = "window.__loadScript(\'lib/crossclient.js\');";


var __init = "";
if(location.pathname == "/tmp/panelcontainer.html") {
  __init = __initLibs + __initClient; 
} else {
  __init = __initJquery + __initLibs + __initCW + __initPanel + __runPanel;
}

if(window.chrome) {
  var script  = document.createElement("script");
  script.type = "text/javascript";
  script.innerHTML = __init;
  document.getElementsByTagName("head").item(0).appendChild(script);
} else {
  window.setTimeout(__init, 1)
}
';
 
  //exit;
  if(!is_dir($path . '/panel/v')) mkdir($path . '/panel/v');
  $version_path = $path . '/panel/v/' . sprintf('%05d', $version);
  mkdir($version_path);
  file_put_contents($version_path . '/gwpanel2.user.js', $output);
}

/*function panel_view() {
  global $user;
  $uid = $user->uid;
  $result = db_query('SELECT id, options FROM {gwjs_panels} WHERE uid=%d', $uid);
  if(!db_num_rows($result)) {
    drupal_set_message('Для начала нужно создать панель.<br />Выберите, какие возможности вы будете использовать (по умолчанию включены все возможности) и нажмине на кнопку "Сохранить"');
    drupal_goto('panel/edit');
  }
  drupal_set_title('Установить GWPanel');
  $result = '';
  
  if(strpos($_SERVER['HTTP_USER_AGENT'], 'MSIE') !== FALSE) {
    $result = 'Извините, Браузер Internet Explorer временно не поддерживается (по крайней мере до выхода 8-й версии)<br /><br /><h3>Однако вы можете начать использовать GWPanel прямо сейчас установив один из поддерживаемых браузеров: <br /><br />
<a href="http://www.mozilla.com/firefox?from=sfx&uid=0&t=309"><img border="0" alt="Spreadfirefox Affiliate Button" src="http://sfx-images.mozilla.org/affiliates/Buttons/firefox3/468x60.png" /></a><br /><br /><br />
<a href="http://www.opera.com/download/"><img src="http://promote.opera.com/opera9/468x60opera9.gif" width="468" height="60" alt="Safe online banking and shopping - New fraud protection from Opera" title="Download & Install Opera 9.6 Now!" /></a>
';
    return $result;
    $result = '<b>Внимание!</b> Ознакомьтесь с <a href="' . url('node/9') . '">этой страницей прежде чем использовать панель</a>.<br /><br />Для того чтобы панель открывалась автоматически, вам нужно установить плагин Greasemonkey как сказано в <a href="' . url('panel/ie') . '">этой статье</a> и скачать <a href="' . url('panel/ie') . '">этот файл</a>';
    $result .= '<h2>Ваш браузер - Internet Explorer</h2><br />';
  } else if(preg_match('/Mozilla.*Firefox\/([0-9\.]+)/', $_SERVER['HTTP_USER_AGENT'], $matches)) {
    if(strpos($_SERVER['HTTP_USER_AGENT'], 'WebMoney') != FALSE) {
      $result .= '<h2>Внимание! В поле user-agent обнаружена строка  <strong><i>"WebMoney Advisor"</i></strong>, это ПО изменяет строку идентификатора браузера на неверное значение!<br />
Если у вас установлен Firefox версии 3.0.1 и выше, то можете смело устанавливать панель. В противном случае обновите браузер <a href="http://www.mozilla.com/firefox?from=sfx&uid=0&t=309"><img border="0" alt="Spreadfirefox Affiliate Button" src="http://sfx-images.mozilla.org/affiliates/Buttons/firefox3/468x60.png" /></a><br /><br />
<h3>1. Установите плагин <a target="__blank" href="http://addons.mozilla.org/ru/firefox/addon/748">Greasemonkey</a> (читается как "Гризманки")<br />
2. Перезапустите Firefox<br />
3. Установите один из файлов:<br />
<ul>
<li><a href="' . url('panel/mozilla/gwpanel.user.js', NULL, NULL, TRUE) . '">Обычная версия</a> (подгружается почти на всех страницах включая страницу боя)<br />
<li><a href="' . url('panel/mozilla/manual/gwpanel.user.js', NULL, NULL, TRUE) . '">Ручная версия</a> (активируется только по запросу пользователя ссылкой наверху страницы рядом со ссылкой "Форум")</li>
</ul>
</h3>';
    } else if(version_compare($matches[1], '3.0.1') < 0) {
      $result .= '<h3>К сожалению GWPanel может работать только с Firefox 3.0.1 и выше</h3><br /><br /><a href="http://www.mozilla.com/firefox?from=sfx&uid=0&t=309"><img border="0" alt="Spreadfirefox Affiliate Button" src="http://sfx-images.mozilla.org/affiliates/Buttons/firefox3/468x60.png" /></a>';
      return $result;
    } else {
      $result .= '<h3>1. Проверьте версию на <a href="' . url('panel/test', NULL, NULL, TRUE) . '">этой странице</a><br />
2. Установите плагин <a target="__blank" href="http://addons.mozilla.org/ru/firefox/addon/748">Greasemonkey</a> (читается как "Гризманки")<br />
3. Перезапустите Firefox<br />
4. Установите один из файлов:<br />';
     $result .= '</h3>';
    }
  } else if(preg_match('/Opera\/([0-9\.]+)/', $_SERVER['HTTP_USER_AGENT'], $matches)) {
    if(version_compare($matches[1], '9.52') < 0) {
      $result = 'Извините, поддерживается только Opera версии 9.52 и выше...<br />
<a href="http://www.opera.com/download/"><img src="http://promote.opera.com/opera9/468x60opera9.gif" width="468" height="60" alt="Safe online banking and shopping - New fraud protection from Opera" title="Download & Install Opera 9.6 Now!" /></a>
';
      return $result;
    } else {
      $result = '<h3>1. Проверьте версию на <a href="' . url('panel/test', NULL, NULL, TRUE) . '">этой странице</a><br /><br />
2. Настройте папку с пользовательскими скриптами как показано <a target="__blank" href="http://clubs.ya.ru/4611686018427409269/replies.xml?item_no=874&ncrnd=3302">на этом скриншоте (ссылка)</a><br /><br />
3. Удалите ВСЕ НАСТРОЙКИ которые вы выставляли при помощи кнопки "Настройки для сайта" (скрипты от W_or_M и прочее устанавливайте точно так же как показано по ссылке ниже, они будут работать) <br /><br />
4. Скачайте скрипт в папку с пользовательскими скриптами по одной из ссылок ниже.</h3>'; 
    }
  } else if(preg_match('/Chrome\/([0-9\.]+)/', $_SERVER['HTTP_USER_AGENT'], $matches)) {
    if(version_compare($matches[1], '4.0') < 0) {
      $result = 'Извините, поддерживается только Chrome версии 4 и выше...<br />
<a href="http://www.google.com/chrome/"><img src="http://www.downloadgooglechrome.org/wp-content/uploads/2008/09/google-chrome-logo-2.png" /></a>
';
      return $result;
    } else {
      $result = '<h3>1. Зайдите на <a href="chrome://extensions/" target="_blank">страницу расширений</a> и удостоверьтесь что скрипт GWPanel не установлен<br />
2. Установите скрипт по одной из ссылок ниже.<br />
3. Если вы используете версию без фрейма, то при первом запуске скрипта разрешите всплывающие окна для ganjawars.ru (иконка с крестиком в адресной строке)<br /></h3>
<p>Поддержка Google Chrome находится в стадии Бета-тестирования, сообщайте обо всех ошибках, которые найдете, на наш трекер (на самой панельке в главном меню - GWPanel -> Сообщить об ошибке, не забудьте указать что браузер - chrome)</p>
'; 
    }
  } else {
    $result = 'Извините, ваш браузер не поддерживается. Используйте один из этих браузеров:<br /><br />
<a href="http://www.mozilla.com/firefox?from=sfx&uid=0&t=309"><img border="0" alt="Spreadfirefox Affiliate Button" src="http://sfx-images.mozilla.org/affiliates/Buttons/firefox3/468x60.png" /></a><br /><br /><br />
<a href="http://www.opera.com/download/"><img src="http://promote.opera.com/opera9/468x60opera9.gif" width="468" height="60" alt="Safe online banking and shopping - New fraud protection from Opera" title="Download & Install Opera 9.6 Now!" /></a> <br /><br />
Здесь приведена информация как сервер определил ваш браузер <br />
<a href="http://gwpanel.org/panel/test">http://gwpanel.org/panel/test</a>
';
    return $result;
  }
  $result .= '<br /><br />
<h2>Standalone-установка</h2>
все скрипты и стили находятся в одном упакованном файле ( <strong>~200 КБ</strong> со всеми включенными модулями) <br />
<ul>
<li><a href="/panel/standalone/gwpanel.user.js">Установить обычную версию </a> - оригинальная версия, активируется на большинстве страниц игры автоматически</li>
<li><a href="/panel/standalone/manual/gwpanel.user.js">Установить ручную версию </a> подходит тем, кому не нравится что панель постоянно "Вылазит" (активируется только по запросу пользователя при помощи кнопки наверху страницы рядом со ссылкой "Форум")</li>
</ul>
<br />
<br />
<hr />
<br />
<strong>Не забывайте</strong>, что вы должны быть <strong>авторизованы</strong> на сайте используя постоянный вход (галочка "Запомнить меня") чтобы использовать этот скрипт';

  return $result;
}*/

/*function panel_edit_form() {
  $form = array();
  $plugins = module_invoke_all('panel_plugins');
  uasort($plugins, '_element_sort');
  global $user;
  $uid = $user->uid;
  if(user_access('administer panels') && is_numeric(arg(2))) $uid = arg(2);
  
  $options = array();
  foreach($plugins as $plugin_name => $plugin) {
    if(!$plugin['access'] || user_access($plugin['access'])) {
      $options[$plugin_name] = $plugin['description'];
    }
  }
  $saved_options = unserialize(db_result(db_query('SELECT options FROM {gwjs_panels} WHERE uid=%d', $uid)));
  if(!$saved_options) {
    $selected_plugins = array_keys($options);
  } else {
    $selected_plugins = $saved_options['plugins'];
  }
  
  $form['plugins'] = array(
    '#prefix' => '<strong>Выберите подключаемые модули:</strong> (по-умолчанию выбраны все доступные модули)', 
    '#type' => 'checkboxes', 
    '#options' => $options, 
    '#default_value' => $selected_plugins, 
  );
  $form['confirm'] = array(
    '#type' => 'submit', 
    '#value' => 'Сохранить', 
  );
  return $form;
}*/
/*
function panel_edit_form_submit($name, $form) {
  global $user;
  $uid = $user->uid;
  if(user_access('administer panels') && is_numeric(arg(2))) $uid = arg(2);
  $result = db_query('SELECT id, options FROM {gwjs_panels} WHERE uid=%d', $uid);
  if($result) {
    $result = db_fetch_array($result);
    $options = unserialize($result['options']);
    $panel_id = $result['id'];
  } else {
    $panel_id = false;
    $result = array();
    $options = array();
  }
  $options['plugins'] = array_values($form['plugins']);
  foreach($options['plugins'] as $index => $plugin) {
    if(!$plugin) unset($options['plugins'][$index]);
  }
  if(!$panel_id) {
    if(!db_query('INSERT INTO {gwjs_panels}(uid, options) VALUES (%d, "%s")', $uid, serialize($options)))
      return drupal_set_message('Не удалсь сохранить настройки панели');
  } else {
    if(!db_query('UPDATE {gwjs_panels} SET options="%s" WHERE id=%d', serialize($options), $panel_id))
      return drupal_set_message('Не удалось сохранить настройки панели');
  }
  panel_update_script($uid);
  drupal_set_message('Сохранено успешно.<br /> Не забудьте посетить <b><i><a href="' . url('panel/settings') . '">страницу настроек</a></i></b> и активировать некоторые возможности!<br />Если вы используете <b>STANDALONE</b>-версию, то скачайте скрипт заново со страницы установки.');
  drupal_goto('panel');
}*/

function panel_update_version($is_security = FALSE) {
  $version = db_result(db_query('SELECT vid FROM {gwjs_files} WHERE path="gwpanel"'));
  if($is_security) {
    variable_set('aad_panel_security', $version);
  }
  $security = variable_get('aad_panel_security', 0);
  
  $out = 'if(top.__panel && top.versions["gwpanel"] < ' . $version . ') {
  try {top.__panel.newVersionButtonShow(); } catch(e) {}
  if(top.__panel && top.versions["gwpanel"] < ' . $security . ') {
  if(confirm("Ваша версия GWPanel является устаревшей и больше не поддерживается, дальнейшее её использование невозможно.\n\nВНИМАНИЕ! Не исключено, что в ней есть старые функции, которые запрещены правилами игры и могут привести к нехорошим последствиям для вашего персонажа :(\n\nОткрыть страницу с изменениями чтобы вы могли обновиться до самой последней и безопасной версии?")) {
    window.open("http://' . $_SERVER['HTTP_HOST'] . '/panel/updatelist");
  }
  window.close();
  }
}';
  file_put_contents('modules/gwjs/panel/version.js', iconv('UTF-8', 'CP1251', $out));
  
  file_put_contents('modules/gwjs/panel/version.opera.html', '<html><body><script>
  top.postMessage("f=" + encodeURIComponent("if(top.__panel.version && top.__panel.version < ' . $version . iconv('UTF-8', 'CP1251', ') {top.__panel.newVersionButtonShow();if(if(top.__panel.version && top.__panel.version < ' . $security . ') {confirm(\'Ваша версия GWPanel является устаревшей и больше не поддерживается, дальнейшее её использование невозможно.\\\\n\\\\nВНИМАНИЕ! Не исключено, что в ней есть старые функции, которые запрещены правилами игры и могут привести к нехорошим последствиям для вашего персонажа :(\\\\n\\\\nОткрыть страницу с изменениями чтобы вы могли обновиться до самой последней и безопасной версии?\')){window.open(\'http://' . $_SERVER['HTTP_HOST'] . '/panel/updatelist\');} window.close();}}"), "*");</script></body></html>'));
/*  if($msie) print iconv('UTF-8', 'CP1251', $out);
  else print $out;
  exit();*/
}


function panel_write_options($options) {
  global $user;
  $uid = $user->uid;
  if(!$uid || !$options || !count($options)) return;
  
  $result = db_fetch_array(db_query('SELECT id,options FROM {gwjs_panels} WHERE uid=%d', $uid));
  if(!$result['id']) return false;
  $saved_options = unserialize($result['options']);
  $saved_options = array_merge($saved_options, $options);
  foreach($saved_options['plugins'] as $index => $plugin) {
    if(!$plugin) unset($saved_options['plugins'][$index]);
  }
  foreach($saved_options as $name => $option) {
    if($option == 'false') $saved_options[$name] = 0;
    else if($option == 'true') $saved_options[$name] = 1;
  }
  $__options = serialize($saved_options);
  $__settings = md5($__options);
  setcookie('settings', $__settings, time() + 31536000, '/');
  return db_query('UPDATE {gwjs_panels} SET options="%s", settings="%s" WHERE uid=%d', $__options, $__settings, $uid);
}

function packScript($script) {
  include_once(drupal_get_path('module', 'panel') . '/class.JavaScriptPacker.php');
  $packer = new JavaScriptPacker($script);
  $packed = $packer->pack();
  $pos = strpos($packed, '}(\'');
  $head = substr($packed, 0, $pos);
  $out = addslashes($head);
  $rest = str_replace(array('\\\\"', '\\"', '\\\\\\\\\\\\"'), array('\\"', '\\\\\\"', '\\\\\\\\\\\\\\"'), addslashes(substr($packed, $pos, strlen($packed) - $pos - 1)));
  $out .= $rest;
  return $out . ';';
}

function panel_get_options() {
  static $options;
  if(!$options) {
    global $user;
    $options = unserialize(db_result(db_query('SELECT options FROM {gwjs_panels} WHERE uid=%d', $user->uid)));
  }
  return $options;
}

/*function panel_settings_form() {
  $options = panel_get_options();
  $form = array();
  
  //print_R($options);
  
  foreach(module_implements('plugin_settings') as $module) {
    if(@in_array($module, $options['plugins']) || $module == 'panel') {
      $_form = module_invoke($module, 'plugin_settings', $options);
      foreach($_form as $key => $value) {
        if(isset($form[$key])) {
          $form[$key] = array_merge($form[$key], $value);
        } else {
          $form[$key] = $value;
        }
      }
    }
  }
  uasort($form, '_element_sort');
  $first = '';
  foreach($form as $key => $value) {
    if($value['#type'] == 'fieldset') {
      $form[$key]['#attributes']['id'] = 'fieldset-' . $key;
      $form[$key]['#attributes']['class'] = 'tab-fieldset';
      if(!$first) {
        $first = $key;
        $prev_key = $first;
        continue;
      }
      $elements[] = $key;
      $form[$key]['#attributes']['style'] .= 'display: none;';
      $form[$key]['backlink'] = array(
        '#type' => 'markup',
        '#weight' => 998,
        '#value' => '<a onclick="location.href = $(\'#tabs-wrapper li.active\').prev().find(\'a\').click().attr(\'href\'); document.documentElement.scrollTop = $(\'#tabs-wrapper\').offset().top; return false;" href="#">&lt;&lt;Назад</a>',
      );
      $form[$key]['forwardlink'] = array(
        '#type' => 'markup',
        '#weight' => 1000,
        '#value' => '<a style="margin-left: 100px;" onclick="location.href = $(\'#tabs-wrapper li.active\').next().find(\'a\').click().attr(\'href\'); document.documentElement.scrollTop = $(\'#tabs-wrapper\').offset().top; return false;" href="#">Далее&gt;&gt;</a>',
      );
      $prev_key = $key;
    }
  }
  $form['tabs'] = array(
    '#type' => 'markup',
    '#weight' => -999,
    '#value' => '<div id="tabs-wrapper"><ul class="tabs primary"><li style="float: left; height: 25px;" class="active"><a class="tab-switch-link" id="link-' . $first . '" href="#' . $first . '">' . $form[$first]['#title'] . '</a></li>',
  );
  foreach($elements as $element) {
    $form['tabs']['#value'] .= '<li style="float: left; height: 25px;"><a class="tab-switch-link" id="link-' . $element . '" href="#' . $element . '">' . $form[$element]['#title'] . '</a></li>';
  }
  
  $form['tabs']['#value'] .= '</ul></div><script>
$(function() {
  $(".tab-switch-link").click(function() {
    $(".tabs li.active").removeClass("active");
    $(this.parentNode).addClass("active");
    $(".tab-fieldset:visible").css({"display": "none"});
    $("#fieldset-" + this.id.split("-")[1]).css({"display": "block"});
  });
  if(location.hash.length > 1) {
    $("#link-" + location.hash.substr(1)).click();
  };
});
</script><div style="clear: both;"></div>';
  $form['save'] = array(
    '#type' => 'submit', 
    '#value' => 'Сохранить', 
    '#weight' => 31, 
  );
  return $form;
}*/

/*function panel_settings_form_submit($form_id, $form_values) {
  $data = $_POST;
  foreach($form_values as $key => $val) if(!isset($data[$key])) $data[$key] = $val;
  unset($data['op']);
  unset($data['save']);
  unset($data['form_token']);
  unset($data['form_id']);
  global $user;
  $options = panel_get_options();
  foreach(module_implements('plugin_settings_save') as $module) {
    if(@in_array($module, $options['plugins']) || $module == 'panel') {
      call_user_func($module . '_plugin_settings_save', $data);
    }
  }
  panel_write_options($data);
  panel_update_script($user->uid);
  drupal_set_message('Настройки сохранены. Не забудьте обновить все страницы с панелью, чтобы изменения вступили в силу.<br />Если вы используете <b>STANDALONE</b>-версию, то скачайте скрипт заново со страницы установки.');
}*/

function panel_plugin_settings($form, &$form_state, $values) {
  $form['system'] = array(
    '#type' => 'fieldset',
    '#title' => 'Другие настройки',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE, 
    '#weight' => 10, 
  );
  if($_SERVER['HTTP_HOST'] != 'gwpanel.org') {
    $form['system']['debug'] = array(
      '#type' => 'checkbox',
      '#title' => 'Режим отладки', 
      '#default_value' => isset($values['debug'])? $values['debug']: 0, 
    );
  }
  $form['system']['version_cmp_to'] = array(
    '#type' => 'select', 
    '#title' => 'Проверка обновлений панели раз в',  
    '#options' => array(
      300000 => '5 минут',
      600000 => '10 минут', 
      1800000 => '30 минут', 
      3600000 => '1 час', 
    ), 
    '#default_value' => isset($values['version_cmp_to'])? $values['version_cmp_to']: 300000, 
  );
  
  drupal_add_css(drupal_get_path('module', 'panel') . '/panel.css');
  foreach(glob('sites/all/modules/gwpanel/themes/*') as $theme) {
    $name = basename($theme);
    $info = $preview = '';
    if(file_exists($theme . '/preview.jpg'))
      $preview = '<img align="top" src="/' . $theme . '/preview.jpg" />';
    if(file_exists($theme . '/' . $name . '.info')) {
      $info = file_get_contents($theme . '/' . $name . '.info');
    }
    $themes[$name] = '<span class="theme-name">' . $name . '</span><span class="theme-info">' . $info . '</span><span class="theme-preview">' . $preview . '</span>';
  }
  $form['system']['theme'] = array(
    '#title' => 'Тема оформления', 
    '#prefix' => '<div class="theme-description">', 
    '#suffix' => '</div>', 
    '#type' => 'radios', 
    '#options' => $themes, 
    '#default_value' => isset($values['theme'])? $values['theme']: 'base', 
  );
  $form['system']['manual'] = array(
    '#type' => 'fieldset',
    '#title' => 'Своя тема', 
    '#collapsible' => TRUE, 
    '#collapsed' => empty($values['theme_m']), 
  );
  $form['system']['manual']['theme_m'] = array(
    '#type' => 'textfield', 
    '#title' => 'Указать путь к своей теме (на локальном диске или удаленном сервере)', 
    '#default_value' => isset($values['theme_m'])? $values['theme_m']: '', 
    '#description' => 'Если вы укажете что-нибудь в этом поле, то панель будет пытаться загрузить тему из этого каталога. Эта опция нужна для тех кто хочет разработать собственную темку. Пример:<br />
<li>file:///home/myaccount/mytheme</li>
<li>http://localhost/mytheme</li>
', 
  );
  return $form;
}

/*function panel_gwjs_file($op, $path, $fid) {
  if($op == 'update') {
    if(!($fid = variable_get('gwpanel_fid', FALSE))) {
      $fid = db_next_id('{gwjs_files}_fid');
      db_query('INSERT INTO {gwjs_files} (fid, vid, path, hash, mtime) VALUES (%d, 1, "gwpanel", "", %d)', $fid, time());
      variable_set('gwpanel_fid', $fid);
    }
    $summ = db_result(db_query('SELECT SUM(vid) FROM {gwjs_files} WHERE fid != %d', $fid));
    db_query('UPDATE {gwjs_files} SET vid=vid+1, hash="%s", mtime=%d WHERE fid=%d', $summ, time(), $fid);
  } else if($op == 'add') {
    if(!($fid = variable_get('gwpanel_fid', FALSE))) {
      $fid = db_next_id('{gwjs_files}_fid');
      db_query('INSERT INTO {gwjs_files} (fid, vid, path, hash, mtime) VALUES (%d, 1, "gwpanel", "", %d)', $fid, time());
      variable_set('gwpanel_fid', $fid);
    }
  }
}*/

function panel_updatelist() {
  return 'updatelist';
  global $user;
  $uid = $user->uid;
  if(!$uid) {
    return 'Вы должны быть авторизованы';
  }
  $date = db_result(db_query('SELECT date FROM {gwjs_panels} WHERE uid=%d', $uid));
  if($type == 'bydate') {
    $result = db_query('SELECT c.vid, c.changes, f.path, c.date FROM {gwjs_files_changes} c LEFT JOIN {gwjs_files} f on c.fid=f.fid WHERE c.changes !="<none>" ORDER BY c.date DESC LIMIT 100', $date);
  } else {
    $result = db_query('SELECT c.vid, c.changes, f.path, c.date FROM {gwjs_files_changes} c LEFT JOIN {gwjs_files} f on c.fid=f.fid WHERE c.date>%d AND c.changes !="<none>"', $date);
  }
  $i = 0;
  while($ar = db_fetch_array($result)) {
    $i++;
    if(!$ar['changes']) continue;
    if(!isset($form[$ar['path']])) {
      $form[$ar['path'] . '_' . $ar['date']] = array(
        '#type' => 'markup', 
        '#value' => '<div>[' . date('d.m.y H:i', $ar['date']) . '] Обновления в файле ' . $ar['path'] . ':</div>', 
      );
    }
    $form[$ar['path'] . '_' . $ar['date']]['#value'] .= '<li style="margin-left: 20px;"><h3>' . $ar['changes'] . '</h3></li>';
  }
  if(!$i) {
    $form['nochanges'] = array(
      '#type' => 'markup', 
      '#value' => '<p>Изменений нет или они не прокомментированы</p><p></p>', 
    );
  } else {
    $form['update'] = array(
      '#type' => 'markup',
      '#value' => '<h3>Пожалуйста, обновите все вкладки которые встроены в панель чтобы изменения вступили в силу<br />Если вы используете <b>STANDALONE</b>-версию, то скачайте скрипт заново со страницы установки.</h3>', 
    );
  }
  if($ptype = db_result(db_query('SELECT type FROM {gwjs_panels} WHERE uid=%d', $uid))) {
    $form['hint'] = array(
      '#type' => 'markup',
      '#weight' => -100,
      '#value' => '<div class="description">(ссылка на обновление внизу страницы)<br />Последняя версия с обновлением безопасности: ' . variable_get('aad_panel_security', 0) . ', ваша версия: ' . db_result(db_query('SELECT vid FROM {gwjs_files} WHERE path="gwpanel"')) . '</div>', 
    );
    $form['update'] = array(
      '#type' => 'markup',
      '#value' => '<br /><h3><a href="' . url(panel_get_type_link($ptype), NULL, NULL, TRUE) . '">Обновить файл панели</a><span style="margin-left: 20px; color: grey;">(последняя установленная версия - ' . panel_get_type_list($ptype) . ')</span></h3><br /><br />', 
    );
  }
  if($type == 'bydate') {
    $form['end'] = array(
      '#type' => 'markup', 
      '#value' => 'Показаны последние 100 изменений', 
    );
  } else {
    $form['end'] = array(
      '#type' => 'markup', 
      '#value' => l('Показать последние 100 изменений >>', url('panel/updatelist/bydate', NULL, NULL, TRUE)), 
    );
    global $user;
    panel_update_script($user->uid);
  }
  return $form;
}

/// Реализация хуки hook_panel_buttons()
function panel_panel_buttons() {
  return array(
    'link' => array(
      'title' => 'Ссылка',
      'configure' => TRUE, 
      /// Средствами gwpanel предоставляются две настраиваемые опции - title (заголовок) и img (картинка), эти имена зарезервированы.
      'config_params' => array('link', 'blank'),
      'config_types' => array('text', 'checkbox'), 
      'config_titles' => array('Ссылка для перехода', 'В новом окне?'), 
      'config_values' => array('http://www.ganjawars.ru/путь_полностью', 0), 
      'callback' => 'panel_link', 
      'file' => 'panel_buttons.js',
    ),
    'settings' => array(
      'title' => 'Настройки',
      'configure' => FALSE,
      'callback' => 'gotoHref',
      'callback_arguments' => url('panel/settings', NULL, NULL, TRUE),
      'img' => 'icons/settings.png', 
    ),
    'exit' => array(
      'title' => 'Выход',
      'configure' => FALSE,
      'callback' => 'panel_exit',
      'img' => 'icons/exit.png', 
    ),
  );
}

function panel_get_buttons($noconfig = FALSE) {
  $buttons = array();
  foreach(module_implements('panel_buttons') as $module) {
    $func = $module . '_panel_buttons';
    $__buttons = $func();
    foreach($__buttons as $key => $ar) {
      $ar['module'] = $module;
      if($noconfig) {
        unset($ar['config_params'], $ar['config_types'], $ar['config_titles'], $ar['config_values']);
      }
      /// Добавляем в ключ название модуля для избежания конфликта имён. Для изменения других кнопок, используйте hook_buttons_alter
      $buttons[$module . '_' . $key] = $ar;
    }
  }
  
  foreach(module_implements('panel_buttons_alter') as $module) {
    $func = $module . '_panel_buttons_alter';
    $func($buttons);
  }
  return $buttons;
}

function panel_get_widgets($noconfig = FALSE) {
  $widgets = array();
  foreach(module_implements('panel_widgets') as $module) {
    $func = $module . '_panel_widgets';
    $__widgets = $func();
    foreach($__widgets as $key => $ar) {
      $ar['module'] = $module;
      if($noconfig) {
        unset($ar['config_params'], $ar['config_types'], $ar['config_titles'], $ar['config_values']);
      }
      /// Добавляем в ключ название модуля для избежания конфликта имён. Для изменения других кнопок, используйте hook_widgets_alter
      $widgets[$module . '_' . $key] = $ar;
    }
  }
  
  foreach(module_implements('panel_widgets_alter') as $module) {
    $func = $module . '_panel_widgets_alter';
    $func($widgets);
  }
  return $widgets;
}

function panel_panel_plugins() {
  $plugins['panel'] = array(
    'description' => 'Базовый модуль',
    'weight' => -100,
    'apply' => array(
        '/me/' => array(
            'panel_homepage' => 'panel.js',

        ),
        '/login.php' => array(
            'panel_login' => 'panel.js',

        )
    )
  );
  return $plugins;
}
?>